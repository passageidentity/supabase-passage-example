-- Set up auth.user_id method
create or replace function auth.user_id() returns text as $$
 select nullif(current_setting('request.jwt.claims', true)::json->>'userId', '')::text;
$$ language sql stable;

-- Set up Todos
create table "public"."todo" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone default now(),
    "title" text,
    "user_id" text default auth.user_id(),
    "is_complete" boolean default false
);


alter table "public"."todo" enable row level security;
create policy "Allow logged in user to access and modify own data"
on "public"."todo"
as permissive
for all
to public
using ((auth.user_id() = user_id))
with check ((auth.user_id() = user_id));

CREATE UNIQUE INDEX todo_pkey ON public.todo USING btree (id);

alter table "public"."todo" add constraint "todo_pkey" PRIMARY KEY using index "todo_pkey";